1 Use various utility functions discussed to create vectors containing these values. You need to create both
[first containing 10 values and another containing 26] vectors separately.
## [1] 2 4 8 16 32 64 128 256 512 1024
## [1] "a26" "b25" "c24" "d23" "e22" "f21" "g20" "h19" "i18" "j17" "k16"
## [12] "l15" "m14" "n13" "o12" "p11" "q10" "r9" "s8" "t7" "u6" "v5"
## [23] "w4" "x3" "y2" "z1"


Solution:                                               
j=1
for(i in 1:10){
  j = j*2
  print(j)
}

alpha = letters
num = c(1:26)
numr= rev(num)

paste(alpha,numr,sep="")
##-----------------------------------------------------------------------------------------------------------------
##-----------------------------------------------------------------------------------------------------------------

2 Below given is a vector containing first lines of many addresses. Extract city names from all the addresses
using string functions. Hint: you can use a for loop to iterate over results of strsplit for further processing.
address_list=c("802/hiranandani/Mumbai",
"2A/kalka-Delhi",
"345#near adyar#Chennai",
"10-shyaam bazzar-Kolkata")
Result will be as follows:
## [1] "Mumbai"
## [1] "Delhi"
## [1] "Chennai"
## [1] "Kolkata"

Solution:
address_list=c("802/hiranandani/Mumbai",
               "2A/kalka-Delhi",
               "345#near adyar#Chennai",
               "10-shyaam bazzar-Kolkata")
temp = gsub("/","-",address_list)
temp = gsub("#","-",temp)
city = strsplit(temp,"-")
for(i in 1:length(city)){
  print(city[[i]][3])
}

#-----------------------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------------------


